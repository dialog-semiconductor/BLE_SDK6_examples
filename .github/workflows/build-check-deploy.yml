name: build-check-deploy

env:
  SDK_VERSION: SDK6.1182.1

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: 
      - main
      - 'ci-cd'
  push:
    branches: 
      - main
      - 'ci-cd'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job is to build the repository
  build:
    # only run job on diasemi repo to ensure AWS secrets are present
    if: github.repository_owner == 'dialog-semiconductor'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: diasemi/sdk6buildtools:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # get sdk from AWS S3 server
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Copy SDK files from AWS
        run: |
          aws s3 cp s3://dlglpcgithubci/sdk/$SDK_VERSION.zip $GITHUB_WORKSPACE

      - name: Unzip SDK
        run: |
          unzip $GITHUB_WORKSPACE/$SDK_VERSION.zip -d $GITHUB_WORKSPACE

      - name: Move SDK
        run: |
          mv $GITHUB_WORKSPACE/$SDK_VERSION/* $GITHUB_WORKSPACE

      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v3
        with:
          path: ./projects/

      # run script that builds all examples
      - name: build script
        run: |
          python3 projects/.github/scripts/build.py -x projects/.github/config/ignore-list-cmake.txt -v -p ./projects/ -t projects/.github/config/targets.json

      # run script that checks the build result
      - name: deploy atrifacts script
        run: |
          python3  projects/.github/scripts/deploy-artifacts.py -v -t projects/.github/config/targets.json -a ./projects/artifacts

      # run script that checks the build result
      - name: deploy metadata script
        run: |
          python3  projects/.github/scripts/deploy-metadata.py -v

      # run script that purges all of the banner images from the github cache so the new one is displayed
      - name: purge github images script
        run: |
           python3 projects/.github/scripts/purge-github-img.py -u https://github.com/dialog-semiconductor/BLE_SDK6_examples -b ${GITHUB_REF##*/} -v
